%macro Descriptor 3
    dw  %2 & 0FFFFh ;段界限1
    dw  %1 & 0FFFFh ;段基址1
    db  (%1 >> 16) & 0FFh   ;段基址2
    dw  ((%2 >> 8) & 0F00h) | (%3 & 0F0FFh) ;属性1+段界限2 + 属性2
    db  (%1 >> 24) & 0FFh   ;段基址3
%endmacro

;GDT的结构如下
;-----------------------------------------------------------------------------------------------------------------------------
; 段基地址(31~24) | G(23) | D/B(22) | L(21) | AVL(20) | 段界限(19~16) | P(15) | DPL(14~13) | S(12) | TYPE(11~8) | 段基址(23~16) |
;-----------------------------------------------------------------------------------------------------------------------------
;                    段基地址(15~0)                          |                      段界限(15~0)                               |  
;-----------------------------------------------------------------------------------------------------------------------------

;G   “0” 表示段界限以字节为单位 段的扩展范围1B~1MB, “1” 表示段界限是以4KB为单位。这样段的扩展范围是从4KB~4GB
;D/B “默认的操作数大小”或者“默认栈指针大小”又或者“上部边界” 该标志位对不同段有不同效果。
;     对于代码段，此为称做“D”位，用于指示指令中默认的偏移地址和操作数尺寸。D=0表示指令中偏移地址或者操作数是16位的，D=1，表示是32位的
;     对于栈段来说，该被叫做“B”位,用于在进行隐式的栈操作时候，是使用SP还是ESP，0使用SP寄存器 1使用ESP
;L    是64位代码段标志，“1”表示64位代码段
;AVL  是软件可以使用的位
;P    段存在位，用于指示描述符所对应的段是否存在 0 表示不存在 1 表示存在，如果是0 CPU可以存在中断
;DPL  表示描述符的特权 （Descriptor Privilege Level）特权等级从0~3
;S    “0” 表示是一个系统段,“1” 表示代表一个代码段或者数据段
;TYPE 用于指示描述符的类型 分别是X,E,W,A

;-------------------------------------------------------------------
;   X   |   E   |   W   |   A   |   描述符类别  |       含义         |
;   0   |   0   |   0   |   x   |     数据     |       只读         |    
;   0   |   0   |   1   |   x   |     数据     |       读写         |
;   0   |   1   |   0   |   x   |     数据     |    只读并且向下扩展  |
;   0   |   1   |   1   |   x   |     数据     |    读写并且向下扩展  |
;-------------------------------------------------------------------
;   X   |   C   |   R   |   A   |   描述符类别  |       含义         |
;   1   |   0   |   0   |   x   |     代码     |       执行         |
;   1   |   0   |   1   |   x   |     代码     |     执行只读        | 
;   1   |   1   |   0   |   x   |     代码     | 只执行，依从的代码段  |
;   1   |   1   |   1   |   x   |     代码     | 执行，读，依从的代码段 |
;--------------------------------------------------------------------





