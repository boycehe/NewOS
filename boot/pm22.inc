; 描述符类型
DA_32		EQU	4000h	; 32 位段

DA_DPL0		EQU	  00h	; DPL = 0
DA_DPL1		EQU	  20h	; DPL = 1
DA_DPL2		EQU	  40h	; DPL = 2
DA_DPL3		EQU	  60h	; DPL = 3

; 存储段描述符类型
DA_DR		EQU	90h	; 存在的只读数据段类型值
DA_DRW		EQU	92h	; 存在的可读写数据段属性值
DA_DRWA		EQU	93h	; 存在的已访问可读写数据段类型值
DA_C		EQU	98h	; 存在的只执行代码段属性值
DA_CR		EQU	9Ah	; 存在的可执行可读代码段属性值
DA_CCO		EQU	9Ch	; 存在的只执行一致代码段属性值
DA_CCOR		EQU	9Eh	; 存在的可执行可读一致代码段属性值

; 系统段描述符类型
DA_LDT		EQU	  82h	; 局部描述符表段类型值
DA_TaskGate	EQU	  85h	; 任务门类型值
DA_386TSS	EQU	  89h	; 可用 386 任务状态段类型值
DA_386CGate	EQU	  8Ch	; 386 调用门类型值
DA_386IGate	EQU	  8Eh	; 386 中断门类型值
DA_386TGate	EQU	  8Fh	; 386 陷阱门类型值


; 选择子图示:
;         ┏━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┳━━┓
;         ┃ 15 ┃ 14 ┃ 13 ┃ 12 ┃ 11 ┃ 10 ┃ 9  ┃ 8  ┃ 7  ┃ 6  ┃ 5  ┃ 4  ┃ 3  ┃ 2  ┃ 1  ┃ 0  ┃
;         ┣━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━┻━━╋━━╋━━┻━━┫
;         ┃                                 描述符索引                                 ┃ TI ┃   RPL    ┃
;         ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━┻━━━━━┛
;
; RPL(Requested Privilege Level): 请求特权级，用于特权检查。
;
; TI(Table Indicator): 引用描述符表指示位
;	TI=0 指示从全局描述符表GDT中读取描述符；
;	TI=1 指示从局部描述符表LDT中读取描述符。
;

;----------------------------------------------------------------------------
; 选择子类型值说明
; 其中:
;       SA_  : Selector Attribute

SA_RPL0		EQU	0	; ┓
SA_RPL1		EQU	1	; ┣ RPL
SA_RPL2		EQU	2	; ┃
SA_RPL3		EQU	3	; ┛

SA_TIG		EQU	0	; ┓TI
SA_TIL		EQU	4	; ┛
;----------------------------------------------------------------------------



; 宏 ------------------------------------------------------------------------------------------------------
;
; 描述符
; usage: Descriptor Base, Limit, Attr
;        Base:  dd
;        Limit: dd (low 20 bits available)
;        Attr:  dw (lower 4 bits of higher byte are always 0)
%macro Descriptor 3
	dw	%2 & 0FFFFh				; 段界限1
	dw	%1 & 0FFFFh				; 段基址1
	db	(%1 >> 16) & 0FFh			; 段基址2
	dw	((%2 >> 8) & 0F00h) | (%3 & 0F0FFh)	; 属性1 + 段界限2 + 属性2
	db	(%1 >> 24) & 0FFh			; 段基址3
%endmacro ; 共 8 字节
;
; 门
; usage: Gate Selector, Offset, DCount, Attr
;        Selector:  dw
;        Offset:    dd
;        DCount:    db
;        Attr:      db
%macro Gate 4
	dw	(%2 & 0FFFFh)				; 偏移1
	dw	%1					; 选择子
	dw	(%3 & 1Fh) | ((%4 << 8) & 0FF00h)	; 属性
	dw	((%2 >> 16) & 0FFFFh)			; 偏移2
%endmacro ; 共 8 字节
; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

;GDT的结构如下
;-----------------------------------------------------------------------------------------------------------------------------
; 段基地址(31~24) | G(23) | D/B(22) | L(21) | AVL(20) | 段界限(19~16) | P(15) | DPL(14~13) | S(12) | TYPE(11~8) | 段基址(23~16) |
;-----------------------------------------------------------------------------------------------------------------------------
;                    段基地址(15~0)                          |                      段界限(15~0)                               |  
;-----------------------------------------------------------------------------------------------------------------------------

;G   “0” 表示段界限以字节为单位 段的扩展范围1B~1MB, “1” 表示段界限是以4KB为单位。这样段的扩展范围是从4KB~4GB
;D/B “默认的操作数大小”或者“默认栈指针大小”又或者“上部边界” 该标志位对不同段有不同效果。
;     对于代码段，此为称做“D”位，用于指示指令中默认的偏移地址和操作数尺寸。D=0表示指令中偏移地址或者操作数是16位的，D=1，表示是32位的
;     对于栈段来说，该被叫做“B”位,用于在进行隐式的栈操作时候，是使用SP还是ESP，0使用SP寄存器 1使用ESP
;L    是64位代码段标志，“1”表示64位代码段
;AVL  是软件可以使用的位
;P    段存在位，用于指示描述符所对应的段是否存在 0 表示不存在 1 表示存在，如果是0 CPU可以存在中断
;DPL  表示描述符的特权 （Descriptor Privilege Level）特权等级从0~3
;S    “0” 表示是一个系统段,“1” 表示代表一个代码段或者数据段
;TYPE 用于指示描述符的类型 分别是X,E,W,A

;-------------------------------------------------------------------
;   X   |   E   |   W   |   A   |   描述符类别  |       含义         |
;   0   |   0   |   0   |   x   |     数据     |       只读         |    
;   0   |   0   |   1   |   x   |     数据     |       读写         |
;   0   |   1   |   0   |   x   |     数据     |    只读并且向下扩展  |
;   0   |   1   |   1   |   x   |     数据     |    读写并且向下扩展  |
;-------------------------------------------------------------------
;   X   |   C   |   R   |   A   |   描述符类别  |       含义         |
;   1   |   0   |   0   |   x   |     代码     |       执行         |
;   1   |   0   |   1   |   x   |     代码     |     执行只读        | 
;   1   |   1   |   0   |   x   |     代码     | 只执行，依从的代码段  |
;   1   |   1   |   1   |   x   |     代码     | 执行，读，依从的代码段 |
;--------------------------------------------------------------------





