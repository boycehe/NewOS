     1                                           ;计算GDT所在的逻辑段地址
     2 00000000 2E66A1[E07C]                     mov eax,[cs:pgdt+0x7c00+0x02]      ;GDT的32位线性基地址 
     3 00000005 6631D2                           xor edx,edx
     4 00000008 66BB10000000                     mov ebx,16
     5 0000000E 66F7F3                           div ebx                            ;分解成16位逻辑地址 
     6                                  
     7 00000011 8ED8                             mov ds,eax                         ;令DS指向该段以进行操作
     8 00000013 6689D3                           mov ebx,edx                        ;段内起始偏移地址 
     9                                  
    10                                           ;创建0#描述符，它是空描述符，这是处理器的要求
    11 00000016 6667C70300000000                 mov dword [ebx+0x00],0x00000000
    12 0000001E 6667C7430400000000               mov dword [ebx+0x04],0x00000000  
    13                                  
    14                                           ;创建数据段描述符，段的大小为4GB
    15 00000027 6667C74308FFFF0000               mov dword [ebx+0x08],0x0000ffff    ;基地址为0x00000000，向上扩展
    16 00000030 6667C7430C0092CF00               mov dword [ebx+0x0c],0x00cf9200    ;段界限为0xfffff，粒度为4KB，数据段描述符
    17                                  
    18                                           ;创建保护模式下初始代码段描述符
    19 00000039 6667C74310FF01007C               mov dword [ebx+0x10],0x7c0001ff    ;基地址为0x00007c00，向上扩展
    20 00000042 6667C7431400984000               mov dword [ebx+0x14],0x00409800    ;界限为0x001ff，粒度为字节，代码段描述符
    21                                  
    22                                           ;创建数据段描述符，实际用做第一个栈段
    23 0000004B 6667C74318FF07006C               mov dword [ebx+0x18],0x6c0007ff    ;基地址为0x00006c00，向上扩展
    24 00000054 6667C7431C00924000               mov dword [ebx+0x1c],0x00409200    ;界限为0x007ff，粒度为字节，数据段描述符
    25                                  
    26                                           ;创建数据段描述符，实际用做第二个栈段
    27 0000005D 6667C74320FEFF007C               mov dword [ebx+0x20],0x7c00fffe    ;基地址为0x00007c00，向下扩展
    28 00000066 6667C743240096CF00               mov dword [ebx+0x24],0x00cf9600    ;界限为0xffffe，粒度为4KB，数据段描述符
    29                                  
    30                                           ;初始化描述符表寄存器GDTR
    31 0000006F 2EC706[DE7C]2700                 mov word [cs: pgdt+0x7c00],39      ;描述符表的界限
    32                                   
    33 00000076 2E0F0116[DE7C]                   lgdt [cs: pgdt+0x7c00]
    34                                        
    35 0000007C E492                             in al,0x92                         ;南桥芯片内的端口 
    36 0000007E 0C02                             or al,0000_0010B
    37 00000080 E692                             out 0x92,al                        ;打开A20
    38                                  
    39 00000082 FA                               cli                                ;中断机制尚未工作
    40                                  
    41 00000083 0F20C0                           mov eax,cr0
    42 00000086 6683C801                         or eax,1
    43 0000008A 0F22C0                           mov cr0,eax                        ;设置PE位
    44                                        
    45                                           ;以下进入保护模式... ...
    46 0000008D EA[9200]1000                     jmp 0x0010:flush
    47                                                                               
    48                                           [bits 32]                          
    49                                    flush:                                     
    50 00000092 B808000000                       mov eax,0x0008                     ;0000000000001_0_00B
    51 00000097 8ED8                             mov ds,eax                         ;DS设置到4GB数据段
    52                                  
    53                                           ;以下演示第一个栈段的操作
    54 00000099 B818000000                       mov eax,0x0018                     ;0000000000011_0_00B
    55 0000009E 8ED0                             mov ss,eax                         ;SS设置到第一个栈段
    56 000000A0 BC00080000                       mov esp,0x800                      ;向上扩展的段，应将栈指针设置为段大小
    57                                  
    58 000000A5 684D072E07                       push dword 0x072e074d              ;字符'M'、'.'及其显示属性
    59 000000AA 6850072E07                       push dword 0x072e0750              ;字符'P'、'.'及其显示属性
    60                                  
    61 000000AF 8F0500800B00                     pop dword [0x0b8000]
    62 000000B5 8F0504800B00                     pop dword [0x0b8004]
    63                                  
    64                                           ;以下演示第二个栈段的操作
    65 000000BB B820000000                       mov eax,0x0020                     ;0000000000100_0_00B
    66 000000C0 8ED0                             mov ss,eax                         ;SS设置到第二个栈段
    67 000000C2 BC00000000                       mov esp,0                          ;向下扩展的段，应将栈指针设置为0
    68                                  
    69 000000C7 686F076B07                       push dword 0x076b076f              ;字符'o'、'k'及其显示属性
    70 000000CC 6820072007                       push dword 0x07200720              ;两个空白字符及其显示属性
    71                                  
    72 000000D1 8F0508800B00                     pop dword [0x0b8008]
    73 000000D7 8F050C800B00                     pop dword [0x0b800c]
    74                                  
    75 000000DD F4                               hlt
    76                                  
    77                                  ;-------------------------------------------------------------------------------
    78 000000DE 0000                         pgdt             dw 0
    79 000000E0 007E0000                                      dd 0x00007e00      ;GDT的物理地址
    80                                  ;-------------------------------------------------------------------------------                             
    81 000000E4 00<rept>                     times 510-($-$$) db 0
    82 000001FE 55AA                                          db 0x55,0xaa
