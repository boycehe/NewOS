     1                                           ;文件说明：用户程序 
     2                                           ;创建日期：2020-10-30
     3                                  
     4                                  ;===============================================================================
     5                                  SECTION header vstart=0
     6                                  
     7 00000000 [00000000]                       program_length   dd program_end          ;程序总长度#0x00
     8 00000004 [00000000]                       entry_point      dd start                ;程序入口点#0x04
     9 00000008 [10000000]                       salt_position    dd salt                 ;SALT表起始偏移量#0x08
    10 0000000C 05000000                         salt_items       dd (header_end-salt)/256 ;SALT条目数#0x0C
    11                                  
    12                                  ;-------------------------------------------------------------------------------
    13                                           ;符号地址检索表
    14                                           salt:                                     ;#0x28
    15 00000010 405072696E74537472-              PrintString      db  '@PrintString'
    15 00000019 696E67             
    16 0000001C 00<rep F4h>                                  times 256-($-PrintString) db 0
    17                                                       
    18 00000110 405465726D696E6174-              TerminateProgram db  '@TerminateProgram'
    18 00000119 6550726F6772616D   
    19 00000121 00<rep EFh>                                  times 256-($-TerminateProgram) db 0
    20                                                       
    21 00000210 40526561644469736B-              ReadDiskData     db  '@ReadDiskData'
    21 00000219 44617461           
    22 0000021D 00<rep F3h>                                  times 256-($-ReadDiskData) db 0
    23                                  
    24 00000310 40496E69745461736B-              InitTaskSwitch   db  '@InitTaskSwitch'
    24 00000319 537769746368       
    25 0000031F 00<rep F1h>                                  times 256-($-InitTaskSwitch) db 0
    26                                                   
    27 00000410 406D616C6C6F63                   malloc           db  '@malloc'
    28 00000417 00<rep F9h>                                  times 256-($-malloc) db 0
    29                                  header_end:
    30                                    
    31                                  ;===============================================================================
    32                                  SECTION data vfollows=header
    33                                  
    34 00000000 5B5553455220544153-              message_1        db  '[USER TASK]: ,,,,,,,,,,,,,,,,,,,,,,,',0x0d,0x0a,0
    34 00000009 4B5D3A202C2C2C2C2C-
    34 00000012 2C2C2C2C2C2C2C2C2C-
    34 0000001B 2C2C2C2C2C2C2C2C2C-
    34 00000024 0D0A00             
    35                                  
    36 00000027 00<rep 5000h>                    reserved  times 4096*5 db 0                ;保留一个空白区，以演示分页
    37                                  data_end:
    38                                  
    39                                  ;===============================================================================
    40                                        [bits 32]
    41                                  ;===============================================================================
    42                                  SECTION code vfollows=data
    43                                  start:
    44                                           ;在当前任务内的虚拟地址空间里分配内存
    45 00000000 B980000000                       mov ecx,128                                ;请求分配128个字节
    46 00000005 FF1D[10040000]                   call far [malloc]
    47 0000000B 89CB                             mov ebx,ecx                                ;为后面打印字符串准备参数
    48                                  
    49                                           ;复制字符串到分配的内存中
    50 0000000D BE[00000000]                     mov esi,message_1
    51 00000012 89CF                             mov edi,ecx
    52 00000014 B927000000                       mov ecx,reserved-message_1
    53 00000019 FC                               cld
    54 0000001A F3A4                             repe movsb
    55                                  
    56                                  .show:
    57                                           ;mov ebx,message_1
    58 0000001C FF1D[10000000]                   call far [PrintString]
    59 00000022 EBF8                             jmp .show
    60                                  
    61                                  code_end:
    62                                  
    63                                  ;-------------------------------------------------------------------------------
    64                                  SECTION trail
    65                                  ;-------------------------------------------------------------------------------
    66                                  program_end:
